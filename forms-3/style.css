* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

:root {
  font-size: 62.5%;

  font-family: "Staatliches", cursive;
}

body {
  width: 100%;
  background: #bfd7e4;
}

body::before {
  content: "";
  width: 100%;
  height: 46.5rem;

  background: #293241;

  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}

#app {
  padding: 10.7rem 0;
}

/*Cabeçalho do formulario*/
header {
  text-align: center;
}

header h1 {
  font-size: 3.6rem;
  color: white;
  font-weight: normal;
}

header p {
  color: white;
  font-size: 1.6rem;
}

header img {
  margin-top: 2.5rem;
}

/*Título do forms com fundo com cor vermelho*/
.title {
  margin: auto;
  width: 75rem;
  height: 13.3rem;
  background: #f67669;
  padding: 5rem 0;
  text-align: center;
  border-radius: 2rem 2rem 0 0;
  margin-top: 3.2rem;
}

.title h1 {
  color: white;
  font-size: 2.4rem;
  line-height: 3.4rem;
  font-weight: normal;
}

/*Forms*/
form {
  width: 75rem;
  background: white;
  padding: 0 6.4rem 6.4rem;
  margin: auto;

  border-radius: 0 0 2rem 2rem;

  display: flex;
  flex-direction: column;
  gap: 6rem;
}

input,
select,
textarea {
  background: #fafafc;
  border: 0.1rem solid #e6e6f0;
  border-radius: 0.8rem;
  height: 5.6rem;

  padding: 0 2rem;
}

fieldset {
  border: none;
}

fieldset:nth-child(1) {
  padding-top: 3rem;
}

.fieldset-wrapper {
  display: flex;
  flex-direction: column;
  gap: 3rem;
}

.fieldset-wrapper label {
  color: #4e4958;
  font-size: 1.4rem;
  line-height: 2.4rem;
  font-family: "Poppins", sans-serif;
}

.fieldset-wrapper span {
  color: #c1bccc;
  font-size: 1.2rem;
  line-height: 2rem;
  font-family: "Poppins", sans-serif;
  margin-left: 1rem;
}

.fieldset-wrapper span:hover {
  color: #605f63;
}

.input-dupla {
  display: flex;
  gap: 2.2rem;
}

.input-dupla div {
  display: flex;
  flex-direction: column;
  gap: 0.8rem;
}

.input-dupla div input {
  width: 30rem;
}

.input-wrapper {
  display: flex;
  flex-direction: column;
  gap: 0.8rem;
}

fieldset legend {
  color: #253b51;
  font-size: 2.4rem;
  line-height: 3.4rem;
  font-weight: normal;
  text-align: center;

  padding-bottom: 0.8rem;
  width: 62.2rem;
  border-bottom: 0.1rem solid #e6e6f0;
}

.input-wrapper select {
  width: 50%;

  appearance: none;
  -webkit-appearance: none;

  background-image: url("data:image/svg+xml,%3Csvg width='10' height='6' viewBox='0 0 10 6' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1 1L5 5L9 1' stroke='%239C98A6' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E%0A");
  background-repeat: no-repeat;
  background-position: right 2.4rem top 50%;
}

.input-wrapper textarea {
  height: 16.6rem;
  padding: 1rem 2rem;
}

/*Checkbox estilização*/
.input-checkbox {
  position: relative; /*Aqui fazemos como que a caixa seja relativa ao seu espaço para podermos colocar outra propriedade na input checkbox*/
}

.input-checkbox label {
  display: flex;
  align-items: center;
  gap: 0.8em;

  font-size: 1.4rem;
  color: #4e4958;
  font-weight: normal;
  line-height: 2.4rem;
}

.input-checkbox input {
  /*Aqui fazemos com que o ckeckbox fique absoluto a caixa "input-checkbox", assim fique sobeposto a div que desejamos.*/
  position: absolute;

  width: 2.4rem;
  height: 2.4rem;

  background: #fafafc;
  border: 0.1rem solid #e6e6f0;
  border-radius: 0.8rem;

  /*tiramos a opacidade da input para que assim o label::before fique em cima do original e não aparece a input não personalizada, mas assim fica com a acessibilidade da página ainda.*/
  opacity: 0;
  cursor: pointer;
}

.input-checkbox label::before {
  /*Aqui adicionamos um elemento antes do label, que vai ficar no lugar da input tipo checkbox e assim estilizar. Além disso, o conteúdo tem que ser vazio e ter as mesmas dimensões que a input.*/
  content: "";
  width: 2.4rem;
  height: 2.4rem;

  border: 0.1rem solid #e6e6f0;
  border-radius: 0.8rem;
}

/*Aqui estamos fazendo com que quando o checkbox estiver clicado ou sendo acionado, ele faz com que o elemento criado antes no label possa ser alterado, assim adicionando a imagem do check personalizada*/
.input-checkbox input:checked + label::before {
  background-image: url("data:image/svg+xml,%3Csvg width='18' height='14' viewBox='0 0 18 14' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M6 11.17L1.83 7L0.410004 8.41L6 14L18 2L16.59 0.589996L6 11.17Z' fill='%2342D3FF'/%3E%3C/svg%3E%0A");
  background-repeat: no-repeat;
  background-position: top 50% right 50%;
}

/*Aqui para não perdemos a acessibilidade da página e da input checkbox, colocamos a propriedade de focus no elemento criado quando a input estiver em focus também. Só que temos que lembrar que a input está com a opacidade zerada assim não aparece*/
.input-checkbox input:focus + label::before {
  outline: 0.2rem solid black;
}

/*Formatação do campo data e horarios*/
.infos-time {
  display: flex;
  flex-direction: row;
  gap: 3.2rem;
}

.date {
  display: flex;
  flex-direction: column;
  gap: 0.8rem;
}

.date input {
  width: 30rem;
}

.time {
  display: flex;
  gap: 1rem;
}

.time div {
  display: flex;
  flex-direction: column;
  gap: 0.8rem;
}

.time input {
  width: 14rem;
}

.time div {
  display: flex;
  flex-direction: column;
}

/*Formatação do button*/
.button input {
  width: 62.2rem;
  height: 5.1rem;

  background: #f67669;
  color: white;
  font-size: 2rem;
  font-weight: normal;
  line-height: 2.6rem;
  font-family: "Staatliches", cursive;
}
